from aiogram import types
import funk


def menu_start():
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(types.InlineKeyboardButton(text='üì¢ –ù–∞—à–∏ –º–µ–¥–∏–∞', callback_data='menu_media'))
    keyboard.add(types.InlineKeyboardButton(text='üìÑ –û—Ç–∑—ã–≤—ã –ø–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è', callback_data='menu_review'))
    keyboard.add(
        types.InlineKeyboardButton(text='üéì –ü–µ—Ä–µ–π—Ç–∏ –≤ –∞–∫–∞–¥–µ–º–∏—é', url="https://tt.academy?utm_source=reviewbot"))
    keyboard.add(types.InlineKeyboardButton(text='üì© –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º', callback_data='feedback'))
    keyboard.add(types.InlineKeyboardButton(text='üìû –ó–∞–ø—Ä–æ—Å–∏—Ç—å –∑–≤–æ–Ω–æ–∫', callback_data='callme_name'))
    return keyboard


def menu_media():
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(types.InlineKeyboardButton(text='üì∫ YouTube', url="https://www.youtube.com/c/TopTradersAcademy"))
    keyboard.add(types.InlineKeyboardButton(text='üèÜ –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª –¢–¢', url="https://t.me/toptradingview"))
    keyboard.add(types.InlineKeyboardButton(text='üéì –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª –¢–¢–ê', url="https://t.me/tt_academy"))
    keyboard.add(types.InlineKeyboardButton(text='ü¶Ñ –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª DeFiLog', url="https://t.me/DeFiLoG"))
    keyboard.add(types.InlineKeyboardButton(text='üïä Twitter TT', url="https://twitter.com/TopTradersbyTV"))
    keyboard.add(types.InlineKeyboardButton(text='Instagram TTA', url="https://www.instagram.com/toptraders_academy"))
    keyboard.add(types.InlineKeyboardButton(text='Facebook TTA', url="https://www.facebook.com/toptradersacademy"))
    keyboard.add(types.InlineKeyboardButton(text='Medium', url="https://medium.com/@toptradersico"))
    keyboard.add(
        types.InlineKeyboardButton(text='Yandex Dzen', url="https://zen.yandex.ru/id/60127ba261648604d19a9648"))
    keyboard.add(types.InlineKeyboardButton(text='VC Blog', url="https://vc.ru/u/642470-top-traders"))
    keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='menu_back'))
    return keyboard


def menu_review():
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(types.InlineKeyboardButton(text="Crypto Camp", callback_data="option;1"))
    keyboard.add(types.InlineKeyboardButton(text="Crypto Basics", callback_data="option;2"))
    keyboard.add(types.InlineKeyboardButton(text="–ê–Ω—Ç–∏—Ö–∞–æ—Å", callback_data="option;3"))
    keyboard.add(types.InlineKeyboardButton(text="DayTrading Futures", callback_data="option;4"))
    keyboard.add(types.InlineKeyboardButton(text="DeFi", callback_data="option;5"))
    keyboard.add(types.InlineKeyboardButton(text="–ò–Ω—Å–∞–π—Ç", callback_data="option;6"))
    keyboard.add(types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞a–∑–∞–¥", callback_data="menu_back"))
    return keyboard


def menu_back():
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu'))
    return keyboard


def pagination(number, len_rew, number_file_read, prew, pag=True):
    if pag:
        keyboard = types.InlineKeyboardMarkup(row_width=5)
        numbers = funk.number_button(number)
        row = []
        row.append(types.InlineKeyboardButton(text="<", callback_data=f"prew_post;{number};{number_file_read};{prew}"))
        for i in range(len_rew):
            if int(numbers[i]) == int(prew):
                row.append(types.InlineKeyboardButton(text=str(numbers[i]),
                                                      callback_data='ignore'))
            else:
                row.append(types.InlineKeyboardButton(text=str(numbers[i]),
                                                      callback_data=f'see_rew;{numbers[i]};{number};{number_file_read};{prew}'))

        row.append(types.InlineKeyboardButton(text=">", callback_data=f"next_post;{number};{number_file_read};{prew}"))
        keyboard.row(*row)
        row = [types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',
                                          callback_data='review_back')]
        keyboard.row(*row)
    else:
        keyboard = types.InlineKeyboardMarkup()
        row = []
        numbers = [1, 2, 3]

        for i in range(len_rew):
            if int(numbers[i]) == int(prew):
                row.append(types.InlineKeyboardButton(text=str(numbers[i]),
                                                      callback_data='ignore'))
            else:
                row.append(types.InlineKeyboardButton(text=str(numbers[i]),
                                                      callback_data=f'see_rew;{numbers[i]};{number};{number_file_read};{prew}'))
        keyboard.row(*row)
        keyboard.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥',
                                                callback_data='review_back'))

    return keyboard


def number_request():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    button = types.KeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)
    keyboard.add(button)
    return keyboard


def add_reviews(number):
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    row = [types.InlineKeyboardButton(text='‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', callback_data=f'add_rew;{number}')]
    row.append(types.InlineKeyboardButton(text='‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='del_rew'))
    keyboard.row(*row)
    return keyboard


def chat_state():
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    row = [types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='stop_chatting')]
    keyboard.row(*row)
    return keyboard


def call_state():
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    row = [types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='stop_call')]
    keyboard.row(*row)
    return keyboard


def main():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    row = types.KeyboardButton(text='–ì–ª–∞–≤–Ω–∞—è', callback_data='stop_chatting')
    keyboard.row(row)
    return keyboard


def first_msg():
    keyboard = types.InlineKeyboardMarkup(resize_keyboard=True)
    row = [types.InlineKeyboardButton(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—â–µ–Ω–∏–µ', callback_data='feedback_manager_first')]
    keyboard.row(*row)
    return keyboard
